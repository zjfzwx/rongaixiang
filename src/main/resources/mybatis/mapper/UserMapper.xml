<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dingshen.rongaixiang.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.dingshen.rongaixiang.domain.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="scale" jdbcType="VARCHAR" property="scale" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="createtime" jdbcType="DATE" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, password, username, scale, sex,createtime
  </sql>
  <select id="getAllUser" resultType="java.util.Map">
    select * from user
  </select>
  <select id="findAllUser" parameterType="java.util.Map" resultType="com.dingshen.rongaixiang.domain.User">
    select * from user where 1=1
    <if test="type != null">
      and user.scale = #{type}
    </if>
    <if test="keyword != null">
      and user.username like #{keyword}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dingshen.rongaixiang.domain.User">
    insert into user (id, password, username, 
      scale, sex)
    values (#{id,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{scale,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.dingshen.rongaixiang.domain.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="scale != null">
        scale,
      </if>
      <if test="sex != null">
        sex,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="scale != null">
        #{scale,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dingshen.rongaixiang.domain.User">
    update user
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="scale != null">
        scale = #{scale,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dingshen.rongaixiang.domain.User">
    update user
    set password = #{password,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      scale = #{scale,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>